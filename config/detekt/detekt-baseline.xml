<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ImplicitDefaultLocale:AddNotesViewModel.kt$AddNotesViewModel$String.format("#%06X", 0xFFFFFF and color)</ID>
    <ID>LongMethod:AddNoteScreen.kt$@OptIn(ExperimentalMaterial3Api::class) @Composable fun AddNoteScreen( navController: NavController, addNotesViewModel: AddNotesViewModel, noteId: Long? )</ID>
    <ID>LongMethod:NoteFolderScreen.kt$@Composable fun NoteFolderScreen( modifier: Modifier = Modifier, navController: NavController, folderViewModel: NoteFolderViewModel )</ID>
    <ID>LongMethod:NoteFolderScreen.kt$@Preview @Composable private fun NoteFolderScreenPreview()</ID>
    <ID>MagicNumber:AddNotesViewModel.kt$AddNotesViewModel$0xFFFFFF</ID>
    <ID>MagicNumber:Color.kt$0xFF625b71</ID>
    <ID>MagicNumber:Color.kt$0xFF6650a4</ID>
    <ID>MagicNumber:Color.kt$0xFF7D5260</ID>
    <ID>MagicNumber:Color.kt$0xFFCCC2DC</ID>
    <ID>MagicNumber:Color.kt$0xFFD0BCFF</ID>
    <ID>MagicNumber:Color.kt$0xFFEEDF9B</ID>
    <ID>MagicNumber:Color.kt$0xFFEFB8C8</ID>
    <ID>MagicNumber:Color.kt$0xFFF3C279</ID>
    <ID>MagicNumber:Color.kt$0xFFFFFFFF</ID>
    <ID>MagicNumber:Color.kt$0xff4c4c4c</ID>
    <ID>MagicNumber:Color.kt$0xff81deea</ID>
    <ID>MagicNumber:Color.kt$0xffcf94da</ID>
    <ID>MagicNumber:Color.kt$0xffe7ed9b</ID>
    <ID>MagicNumber:Color.kt$0xfff48fb1</ID>
    <ID>MagicNumber:Color.kt$0xffffab91</ID>
    <ID>MagicNumber:NoteFolderScreen.kt$100</ID>
    <ID>MaxLineLength:FolderDao.kt$FolderDao$* This method requires Room to run two queries, so add the @Transaction annotation to this method to ensure that the whole operation is performed atomically.</ID>
    <ID>NewLineAtEndOfFile:AddNotesViewModel.kt$com.hadiyarajesh.notex.ui.note.add.AddNotesViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:Color.kt$com.hadiyarajesh.notex.ui.theme.Color.kt</ID>
    <ID>NewLineAtEndOfFile:ExampleUnitTest.kt$com.hadiyarajesh.notex.ExampleUnitTest.kt</ID>
    <ID>NewLineAtEndOfFile:FoldersScreen.kt$com.hadiyarajesh.notex.ui.folders.FoldersScreen.kt</ID>
    <ID>NewLineAtEndOfFile:FoldersViewModel.kt$com.hadiyarajesh.notex.ui.folders.FoldersViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:NoteFolderViewModel.kt$com.hadiyarajesh.notex.ui.folders.NoteFolderViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:Screens.kt$com.hadiyarajesh.notex.ui.navigation.Screens.kt</ID>
    <ID>NewLineAtEndOfFile:TextComposables.kt$com.hadiyarajesh.notex.ui.component.TextComposables.kt</ID>
    <ID>TooManyFunctions:NoteDao.kt$NoteDao</ID>
    <ID>TooManyFunctions:NotesRepository.kt$NotesRepository</ID>
    <ID>UnusedPrivateMember:AddNoteScreen.kt$@Composable private fun ShowColor( state: MutableState&lt;NoteState&gt;, noteBackground: Animatable&lt;Color, AnimationVector4D&gt; )</ID>
    <ID>UnusedPrivateMember:FoldersScreen.kt$navController: NavController</ID>
    <ID>UnusedPrivateMember:FoldersScreen.kt$noteFolders: LazyPagingItems&lt;NoteFolder&gt;? = null</ID>
    <ID>UnusedPrivateMember:FoldersScreen.kt$onClick: (Folder) -&gt; Unit</ID>
    <ID>UnusedPrivateMember:FoldersScreen.kt$reminderFolder: LazyPagingItems&lt;ReminderFolder&gt;? = null</ID>
    <ID>UnusedPrivateMember:FoldersScreen.kt$val context = LocalContext.current</ID>
    <ID>UnusedPrivateMember:FoldersScreen.kt$val notesFolders = remember { foldersViewModel.noteFolders }.collectAsLazyPagingItems()</ID>
    <ID>UnusedPrivateMember:FoldersScreen.kt$val scope = rememberCoroutineScope()</ID>
    <ID>UnusedPrivateMember:NoteFolderScreen.kt$@Preview @Composable private fun NoteFolderScreenPreview()</ID>
    <ID>UnusedPrivateMember:NoteFolderScreen.kt$onClick: () -&gt; Unit</ID>
    <ID>UnusedPrivateMember:NoteFolderScreen.kt$val context = LocalContext.current</ID>
    <ID>UnusedPrivateMember:NoteFolderScreen.kt$val scope = rememberCoroutineScope()</ID>
    <ID>UnusedPrivateMember:NotesScreen.kt$val context = LocalContext.current</ID>
    <ID>UnusedPrivateMember:NotesScreen.kt$val scope = rememberCoroutineScope()</ID>
    <ID>UnusedPrivateMember:RemindersScreen.kt$navController: NavController</ID>
    <ID>UnusedPrivateMember:RemindersScreen.kt$onClick: (Reminder) -&gt; Unit</ID>
    <ID>UnusedPrivateMember:RemindersScreen.kt$val context = LocalContext.current</ID>
    <ID>UnusedPrivateMember:RemindersScreen.kt$val scope = rememberCoroutineScope()</ID>
    <ID>WildcardImport:AddNoteScreen.kt$import androidx.compose.foundation.*</ID>
    <ID>WildcardImport:AddNoteScreen.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:AddNoteScreen.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:AddNoteScreen.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:ExampleUnitTest.kt$import org.junit.Assert.*</ID>
    <ID>WildcardImport:FolderDao.kt$import androidx.room.*</ID>
    <ID>WildcardImport:FoldersScreen.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:InstantAdapter.kt$import com.squareup.moshi.*</ID>
    <ID>WildcardImport:NoteFolderScreen.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:NotesScreen.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:Other.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:ReminderDao.kt$import androidx.room.*</ID>
    <ID>WildcardImport:RemindersScreen.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:Theme.kt$import androidx.compose.material3.*</ID>
  </CurrentIssues>
</SmellBaseline>
